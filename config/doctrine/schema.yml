detect_relations: true

options:
 collate: utf8_unicode_ci
 charset: utf8

Paypal:
 actAs: { Timestampable: ~ }
 tableName: paypal
 columns:
   paypal_account: { type: string(255), notnull: true }

Restaurant:
 actAs: ~
 tableName: restaurant
 columns:
   name: { type: string(255), notnull: true }
   location: { type: string(255), notnull: true }

Area:
 actAs: ~
 tableName: area
 columns:
   name: { type: string(255), notnull: true }
   seats: { type: int(4), notnull: true }
   sf_guard_user_id: { type: integer, notnull: true }
   restaurant_id: { type: integer, notnull: true }
 relations:
   Restaurant: { onDelete: CASCADE, local: restaurant_id, foreign: id, foreignType: one }
   sfGuardUser: { onDelete: CASCADE, class: sfGuardUser, foreignType: one}

DiningTable:
 actAs: ~
 tableName: dining_table
 columns:
   sf_guard_user_id: { type: integer, notnull: true}
   name: { type: string(255), notnull: true }
   area_id: { type: integer, notnull: true }
 relations:
   Area: { onDelete: CASCADE, local: area_id, foreign: id, foreignAlias: Areas, foreignType: one}
   sfGuardUser: { onDelete: CASCADE, class: sfGuardUser, foreignType: one}

Menu:
 actAs: ~
 tableName: menu
 columns:
   name: { type: string(255), notnull: true }
   content: { type: clob, notnull: true }
   price: { type: int(4), notnull: true }
   is_active: { type: boolean, notnull: true, default: 0 }

MenuOrder:
 actAs: { Timestampable: ~ }
 tableName: menu_order
 columns:
   quantity: { type: int(4), notnull: true }
   is_in_progress: { type: boolean, notnull: true, default: 0 }
   is_ready: { type: boolean, notnull: true, default: 0 }
   is_finished: { type: boolean, notnull: true, default: 0 }
   using_paypal: { type: boolean, notnull: true, default: 0 }
   menu_id: { type: integer, notnull: true }
   dining_table_id: { type: integer, notnull : true }
 relations:
   Menu: { onDelete: CASCADE, local: menu_id, foreign: id, foreignType: one}
   DiningTable: { onDelete: CASCADE, local: dining_table_id, foreign: id, foreignType: one}