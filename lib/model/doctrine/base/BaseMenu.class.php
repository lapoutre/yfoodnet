<?php

/**
 * BaseMenu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property clob $content
 * @property int $price
 * @property boolean $is_active
 * @property MenuOrder $MenuOrder
 * 
 * @method string    getName()      Returns the current record's "name" value
 * @method clob      getContent()   Returns the current record's "content" value
 * @method int       getPrice()     Returns the current record's "price" value
 * @method boolean   getIsActive()  Returns the current record's "is_active" value
 * @method MenuOrder getMenuOrder() Returns the current record's "MenuOrder" value
 * @method Menu      setName()      Sets the current record's "name" value
 * @method Menu      setContent()   Sets the current record's "content" value
 * @method Menu      setPrice()     Sets the current record's "price" value
 * @method Menu      setIsActive()  Sets the current record's "is_active" value
 * @method Menu      setMenuOrder() Sets the current record's "MenuOrder" value
 * 
 * @package    yfoodnet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMenu extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('menu');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('price', 'int', 4, array(
             'type' => 'int',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MenuOrder', array(
             'local' => 'id',
             'foreign' => 'menu_id'));
    }
}